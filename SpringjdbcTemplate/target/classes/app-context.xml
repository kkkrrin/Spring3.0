<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
	https://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<description>Example configuration to get you started.</description>

	<context:component-scan base-package="com.exe.springjdbcTemplate" />

	<!-- 밑에 DB 가져오기 메소드로 의존성주입 -->
	<bean id="customDAO" class="com.exe.springjdbcTemplate.CustomDAO">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- db연결 + SpringDAO 가져옴 제어의역전 + named -->
	<bean id="customDAO2" class="com.exe.springjdbcTemplate.CustomDAO2">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
		<property name="namedJdbcTemplate" ref="namedParameterJdbcTemplate"/>
	</bean>
	
	
	<!-- Spring DAO 사용  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	
	<!-- named -->
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	
	<!-- DB연결 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" 
	p:driverClassName="oracle.jdbc.driver.OracleDriver"
	p:url="jdbc:oracle:thin:@localhost:1521:xe"
	p:username="suzi"
	p:password="a123"/>



</beans>
